% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S4_classes.R
\docType{class}
\name{circSample}
\alias{circSample}
\title{S4 class for storing circRNA relevant information.}
\value{
circSample-object
}
\description{
S4 class for storing circRNA relevant information.
}
\section{Slots}{

\describe{
\item{\code{sample.id}}{The id of the sample, specified by the input sample file naming (e.g. `aligned/[sample]/Chimeric.out.junction`, where `[sample]` are the applied id.), `sample.id``. Must be unique!}

\item{\code{organism}}{The organism of which the smaple originates from.}

\item{\code{gb}}{The specific genome build used for alining the sample.}

\item{\code{chim.file}}{File location for the sample `Chimeric.out.junction` alignment output.}

\item{\code{bam.file}}{File locaion for the sample `Aligned.X.out.bam` alignment output, where X specifies a sorting option during alignment by the STAR algorithm. #[PROPPER REFS?]}

\item{\code{log.file}}{File location for the sample `Log.final.out` alignment run log.}

\item{\code{sj.file}}{File location for the sample `SJ.out.tab` alignment output.}

\item{\code{firstread.firststrand}}{Library preparation protocol, relative to library strandedness. If a first_read-first_strand  protocol is used (e.g. dUTP), then `firstread.firststrand` is `TRUE`, if first_read-second_strand or unstranded then it is `FALSE`.}

\item{\code{paired.end}}{Flag used for describing if whether the sample sequnecing data are paired-end or single-end. Must be logical!}

\item{\code{bsj.reads}}{Annotated and shifted candidate junctions}

\item{\code{bsj.counts}}{The number of reads covering a backsplice junction for each detected basckplice junction CANDIDATES?.}

\item{\code{lsj.counts}}{The input linear splice junction data.}

\item{\code{label}}{An optional name for a given sample, if no `label` is provided, `sample.id`` will be used. Need to check if labels are unique when constructing an experiment!!!!}
}}

\examples{
circSample(
    sample.id = "A549",
    organism = "Homo sapiens",
    gb = "hg38",
    chim.file = "Chimeric.out.junction",
    bam.file = "Aligned.sortedByCoord.out.bam",
    log.file = "Log.final.out",
    sj.file = "SJ.out.tab",
    firstread.firststrand = TRUE,
    paired.end = TRUE
)
}
